define(["./Transforms-0503728c","./Matrix3-b2351961","./ComponentDatatype-ab629b88","./defaultValue-f6d5e6da","./GeometryAttribute-00041b84","./GeometryAttributes-1e4ddcd2","./IndexDatatype-a9b1bc18","./VertexFormat-fbdec922","./Math-355606c6","./Matrix2-7a8e9daf","./RuntimeError-9b4ce3fb","./combine-0c102d93","./WebGLConstants-7f557f93"],(function(e,t,r,i,n,a,o,s,u,m,c,d,p){"use strict";let f=new t.Cartesian3;function y(e){e=i.defaultValue(e,i.defaultValue.EMPTY_OBJECT),this._radius=e.radius,this._directions=e.directions,this._perDirectionRadius=e.perDirectionRadius,this._numberOfRings=i.defaultValue(e.numberOfRings,6),this._vertexFormat=i.defaultValue(e.vertexFormat,s.VertexFormat.DEFAULT),this._workerName="createFanOutlineGeometry"}return y.createGeometry=function(s){const u=s._radius,m=i.defined(s._perDirectionRadius)&&s._perDirectionRadius,c=s._directions,d=s._vertexFormat,p=s._numberOfRings;let y,l,b,_,h,x=0;const D=c.length,C=new a.GeometryAttributes;if(d.position){for(l=0,_=3*D*p,h=new Float64Array(_),b=0;b<p;b++)for(y=0;y<D;y++){f=t.Cartesian3.fromSpherical(c[y],f);const e=m?t.Cartesian3.magnitude(f):u,r=e/p*(b+1);f=t.Cartesian3.normalize(f,f),h[l++]=f.x*r,h[l++]=f.y*r,h[l++]=f.z*r,x=Math.max(x,e)}C.position=new n.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:h})}l=0,_=2*D*p;const G=o.IndexDatatype.createTypedArray(_/3,_);for(b=0;b<p;b++){const e=b*D;for(y=0;y<D-1;y++)G[l++]=y+e,G[l++]=y+1+e;G[l++]=y+e,G[l++]=0+e}return new n.Geometry({attributes:C,indices:G,primitiveType:n.PrimitiveType.LINES,boundingSphere:new e.BoundingSphere(t.Cartesian3.ZERO,x)})},y.createGeometry}));
